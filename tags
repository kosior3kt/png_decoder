!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jk/programming/png_decoder/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
ADVANCE_BYTE	src/png_decoder.c	/^#define ADVANCE_BYTE(/;"	d	file:
ASSERT_AND_FLUSH	src/logger.h	/^#define ASSERT_AND_FLUSH(/;"	d
AS_HEX	src/png_decoder.c	/^#define AS_HEX(/;"	d	file:
AS_HEX_ARR	src/png_decoder.c	/^#define AS_HEX_ARR(/;"	d	file:
AS_HEX_N	src/png_decoder.c	/^#define AS_HEX_N(/;"	d	file:
CRC_LEN	src/png_decoder.c	/^#define CRC_LEN	/;"	d	file:
DIM_LEN	src/png_decoder.c	/^#define DIM_LEN	/;"	d	file:
FILE_PATH_PNG	src/main.c	/^#define FILE_PATH_PNG /;"	d	file:
GET_TOKEN_NAME	src/png_decoder.c	/^#define GET_TOKEN_NAME(/;"	d	file:
HEADER_LEN	src/png_decoder.c	/^#define HEADER_LEN /;"	d	file:
LOG	src/logger.h	/^#define LOG(/;"	d
LOGGER_MAX_LEVEL_LEN	src/logger.c	/^#define LOGGER_MAX_LEVEL_LEN /;"	d	file:
LOG_DEBUG_1	src/logger.h	/^	LOG_DEBUG_1,$/;"	e	enum:__anonb037f5d20103
LOG_DEBUG_2	src/logger.h	/^	LOG_DEBUG_2,$/;"	e	enum:__anonb037f5d20103
LOG_DEBUG_3	src/logger.h	/^	LOG_DEBUG_3,$/;"	e	enum:__anonb037f5d20103
LOG_ERRNO	src/logger.h	/^#define LOG_ERRNO(/;"	d
LOG_ERROR	src/logger.h	/^	LOG_ERROR = 0,$/;"	e	enum:__anonb037f5d20103
LOG_INFO	src/logger.h	/^	LOG_INFO,$/;"	e	enum:__anonb037f5d20103
LOG_SIZE	src/logger.h	/^	LOG_SIZE$/;"	e	enum:__anonb037f5d20103
LOG_WARNING	src/logger.h	/^	LOG_WARNING,$/;"	e	enum:__anonb037f5d20103
MAGIC_NUM_LEN	src/png_decoder.c	/^#define MAGIC_NUM_LEN /;"	d	file:
PNG_MAGIC_NUMBER	src/png_decoder.c	/^#define PNG_MAGIC_NUMBER /;"	d	file:
TOKEN_MATCHES	src/png_decoder.c	/^#define TOKEN_MATCHES(/;"	d	file:
TOK_BKGD	src/png_decoder.h	/^	TOK_BKGD,$/;"	e	enum:__anon5421f88c0103
TOK_IDAT	src/png_decoder.h	/^	TOK_IDAT,$/;"	e	enum:__anon5421f88c0103
TOK_IEND	src/png_decoder.h	/^	TOK_IEND,$/;"	e	enum:__anon5421f88c0103
TOK_IHDR	src/png_decoder.h	/^	TOK_IHDR,$/;"	e	enum:__anon5421f88c0103
TOK_INIT	src/png_decoder.h	/^	TOK_INIT = 0,$/;"	e	enum:__anon5421f88c0103
TOK_PHYS	src/png_decoder.h	/^	TOK_PHYS,$/;"	e	enum:__anon5421f88c0103
TOK_PLTE	src/png_decoder.h	/^	TOK_PLTE,$/;"	e	enum:__anon5421f88c0103
WRITE_FILE_PATH_PNG	src/main.c	/^#define WRITE_FILE_PATH_PNG /;"	d	file:
__LOGGER__	src/logger.h	/^#define __LOGGER__$/;"	d
__PNG_DECODER__	src/png_decoder.h	/^#define __PNG_DECODER__$/;"	d
__anon5421f887010a	src/png_decoder.c	/^	union {$/;"	u	function:parse_header	file:
__anon5421f88c0103	src/png_decoder.h	/^typedef enum {$/;"	g
__anon5421f88c0208	src/png_decoder.h	/^typedef struct {$/;"	s
__anon5421f88c0308	src/png_decoder.h	/^typedef struct {$/;"	s
__anon5421f88c0408	src/png_decoder.h	/^typedef struct {$/;"	s
__anon5421f88c0508	src/png_decoder.h	/^typedef struct {$/;"	s
__anon5421f88c0608	src/png_decoder.h	/^typedef struct {$/;"	s
__anon5421f88c0708	src/png_decoder.h	/^typedef struct {$/;"	s
__anonb037f5d20103	src/logger.h	/^typedef enum{$/;"	g
actual_size	src/png_decoder.h	/^	uint	  actual_size;$/;"	m	struct:__anon5421f88c0408	typeref:typename:uint
actual_size	src/png_decoder.h	/^	uint	actual_size;$/;"	m	struct:__anon5421f88c0508	typeref:typename:uint
b	src/png_decoder.h	/^	uint8_t r, g, b;$/;"	m	struct:__anon5421f88c0208	typeref:typename:uint8_t
bit_depth	src/png_decoder.h	/^	uint8_t  bit_depth, color_type, compression_method, filter_method, interlace_method;$/;"	m	struct:__anon5421f88c0308	typeref:typename:uint8_t
byte_u	src/png_decoder.c	/^	union byte_u {$/;"	u	function:get_next_chunk_size	file:
bytes_to_hex	src/png_decoder.c	/^static const char* bytes_to_hex(const char* _data, const size_t _len) {$/;"	f	typeref:typename:const char *	file:
change_log_level	src/logger.c	/^void change_log_level(const log_level_e _log_level)$/;"	f	typeref:typename:void
check_CRC	src/png_decoder.c	/^const bool check_CRC()$/;"	f	typeref:typename:const bool
check_header	src/png_decoder.c	/^static const bool check_header(const header_chunk_s _header)$/;"	f	typeref:typename:const bool	file:
color_type	src/png_decoder.h	/^	uint8_t  bit_depth, color_type, compression_method, filter_method, interlace_method;$/;"	m	struct:__anon5421f88c0308	typeref:typename:uint8_t
colour_array	src/png_decoder.h	/^	colour_s* colour_array;$/;"	m	struct:__anon5421f88c0408	typeref:typename:colour_s *
colour_s	src/png_decoder.h	/^} colour_s;$/;"	t	typeref:struct:__anon5421f88c0208
compression_method	src/png_decoder.h	/^	uint8_t  bit_depth, color_type, compression_method, filter_method, interlace_method;$/;"	m	struct:__anon5421f88c0308	typeref:typename:uint8_t
current_byte	src/png_decoder.c	/^static uint8_t* current_byte;$/;"	v	typeref:typename:uint8_t *	file:
current_log_level	src/logger.c	/^static log_level_e current_log_level;$/;"	v	typeref:typename:log_level_e	file:
data	src/png_decoder.h	/^	uint8_t data;$/;"	m	struct:__anon5421f88c0508	typeref:typename:uint8_t
data_chunk_s	src/png_decoder.h	/^} data_chunk_s;$/;"	t	typeref:struct:__anon5421f88c0508
decode_from_png	src/png_decoder.c	/^png_external_context_s* decode_from_png(char* _input_png, const uint _size)$/;"	f	typeref:typename:png_external_context_s *
ending_byte	src/png_decoder.c	/^static uint8_t* ending_byte;$/;"	v	typeref:typename:uint8_t *	file:
filter_method	src/png_decoder.h	/^	uint8_t  bit_depth, color_type, compression_method, filter_method, interlace_method;$/;"	m	struct:__anon5421f88c0308	typeref:typename:uint8_t
g	src/png_decoder.h	/^	uint8_t r, g, b;$/;"	m	struct:__anon5421f88c0208	typeref:typename:uint8_t
get_next_chunk_size	src/png_decoder.c	/^static const uint32_t get_next_chunk_size()$/;"	f	typeref:typename:const uint32_t	file:
get_next_token	src/png_decoder.c	/^token_e get_next_token()$/;"	f	typeref:typename:token_e
header_chunk_s	src/png_decoder.h	/^} header_chunk_s;$/;"	t	typeref:struct:__anon5421f88c0308
height	src/png_decoder.h	/^	uint width, height;$/;"	m	struct:__anon5421f88c0708	typeref:typename:uint
height	src/png_decoder.h	/^	uint32_t width, height;$/;"	m	struct:__anon5421f88c0308	typeref:typename:uint32_t
idat	src/png_decoder.h	/^	data_chunk_s	idat;$/;"	m	struct:__anon5421f88c0608	typeref:typename:data_chunk_s
ihdr	src/png_decoder.h	/^	header_chunk_s	ihdr;$/;"	m	struct:__anon5421f88c0608	typeref:typename:header_chunk_s
interlace_method	src/png_decoder.h	/^	uint8_t  bit_depth, color_type, compression_method, filter_method, interlace_method;$/;"	m	struct:__anon5421f88c0308	typeref:typename:uint8_t
len	src/png_decoder.c	/^		uint32_t len;$/;"	m	union:get_next_chunk_size::byte_u	typeref:typename:uint32_t	file:
log_file_pointer	src/logger.c	/^static FILE* log_file_pointer;$/;"	v	typeref:typename:FILE *	file:
log_level_e	src/logger.h	/^} log_level_e;$/;"	t	typeref:enum:__anonb037f5d20103
logger_close	src/logger.c	/^void logger_close()$/;"	f	typeref:typename:void
logger_flush	src/logger.c	/^void logger_flush()$/;"	f	typeref:typename:void
logger_init	src/logger.c	/^void logger_init(const log_level_e _log_level, const char* _file_path)$/;"	f	typeref:typename:void
look_for_magic_bytes	src/png_decoder.c	/^static bool look_for_magic_bytes()$/;"	f	typeref:typename:bool	file:
main	src/main.c	/^int main()$/;"	f	typeref:typename:int
padding	src/png_decoder.c	/^		uint8_t  padding[4];$/;"	m	union:get_next_chunk_size::byte_u	typeref:typename:uint8_t[4]	file:
padding	src/png_decoder.c	/^		uint8_t  padding[4];$/;"	m	union:parse_header::__anon5421f887010a	typeref:typename:uint8_t[4]	file:
palette_chunk_s	src/png_decoder.h	/^} palette_chunk_s;$/;"	t	typeref:struct:__anon5421f88c0408
parse_header	src/png_decoder.c	/^static const uint parse_header(header_chunk_s* _header)$/;"	f	typeref:typename:const uint	file:
pixels	src/png_decoder.h	/^	uint8_t* pixels;$/;"	m	struct:__anon5421f88c0708	typeref:typename:uint8_t *
plte	src/png_decoder.h	/^	palette_chunk_s plte;$/;"	m	struct:__anon5421f88c0608	typeref:typename:palette_chunk_s
png_external_context_s	src/png_decoder.h	/^} png_external_context_s;$/;"	t	typeref:struct:__anon5421f88c0708
png_internal_context_s	src/png_decoder.h	/^} png_internal_context_s;$/;"	t	typeref:struct:__anon5421f88c0608
process_next_chunk	src/png_decoder.c	/^png_external_context_s* process_next_chunk(const token_e _current_token)$/;"	f	typeref:typename:png_external_context_s *
r	src/png_decoder.h	/^	uint8_t r, g, b;$/;"	m	struct:__anon5421f88c0208	typeref:typename:uint8_t
token_e	src/png_decoder.h	/^} token_e;$/;"	t	typeref:enum:__anon5421f88c0103
uint	src/png_decoder.h	/^typedef unsigned uint;$/;"	t	typeref:typename:unsigned
value	src/png_decoder.c	/^		uint32_t value;$/;"	m	union:parse_header::__anon5421f887010a	typeref:typename:uint32_t	file:
width	src/png_decoder.h	/^	uint width, height;$/;"	m	struct:__anon5421f88c0708	typeref:typename:uint
width	src/png_decoder.h	/^	uint32_t width, height;$/;"	m	struct:__anon5421f88c0308	typeref:typename:uint32_t
write_simple_log	src/logger.c	/^void write_simple_log($/;"	f	typeref:typename:void
